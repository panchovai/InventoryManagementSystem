/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View_Controller;

import Model.InHousePart;
import Model.Inventory;
import Model.OutsourcedPart;
import Model.Part;
import java.io.IOException;
import java.net.URL;
import java.util.Optional;
import java.util.ResourceBundle;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextField;
import javafx.stage.Modality;
import javafx.stage.Stage;

/**
 * FXML Controller class
 *
 * @author francisco
 */
public class AddPartController implements Initializable {

    /**
     * Initializes the controller class.
     */
    @Override
    public void initialize(URL url, ResourceBundle rb) {
        // TODO
        outsourcedRadioButton.setSelected(true); //default to outSourced Part
        outsourcedRadioButton.requestFocus();
        partIDInt = Inventory.getPartIDCount();
        addPartsPartIDTextField.setText("AUTO GEN: " + partIDInt);

    }

    private int partIDInt;

    private String exceptionMessage = new String();

    @FXML
    RadioButton inHouseRadioButton;

    @FXML

    RadioButton outsourcedRadioButton;

    @FXML
    private TextField addPartsPartIDTextField;
    @FXML
    private TextField addPartsPartNameTextField;
    @FXML
    private TextField addPartsPartInventoryTextField;
    @FXML
    private TextField addPartsPriceCostTextField;
    @FXML
    private TextField addPartsMaxTextField;
    @FXML
    private TextField addPartsMinTextField;
    @FXML
    private TextField addPartsCompanyNameOrMachineIDTextField;

    @FXML
    private Label addPartsCompanyNameOrMachineIDLabel;

    @FXML
    Button addPartScreenSaveButton;

    @FXML
    Button addPartScreenCancelButton;

    private boolean isPartOutsourced;
    private boolean isPartInHouse;

    String partCompanyNameString;

    //Methods to select InHouse or Outsourced Part
    @FXML
    void AddPartsInHouseRadio(ActionEvent event) {
        //isPartInHouse = true;
        addPartsCompanyNameOrMachineIDLabel.setText("MachineID");

    }

    @FXML
    void AddPartsOutsourcedRadio(ActionEvent event) {
        isPartOutsourced = true;
        addPartsCompanyNameOrMachineIDLabel.setText("Company Name");
    }

    @FXML
    void addPartToInventory(ActionEvent event) throws IOException {

        //Capture user input addPartsPartIDTextField
        String partIDString = addPartsPartIDTextField.getText();// Autogenerated, not captured from user
        String partNameString = addPartsPartNameTextField.getText();
        String partInvString = addPartsPartInventoryTextField.getText();
        String partPriceString = addPartsPriceCostTextField.getText();
        String partMinString = addPartsMinTextField.getText();
        String partMaxString = addPartsMaxTextField.getText();
        String partMachineIDStringOrCompanyName = addPartsCompanyNameOrMachineIDTextField.getText();

        try {
            exceptionMessage = Part.isPartValid(partNameString,
                    Integer.parseInt(partMinString), Integer.parseInt(partMaxString),
                    Integer.parseInt(partInvString), Double.parseDouble(partPriceString),
                    exceptionMessage);



            if (exceptionMessage.length() > 0) {
                Alert alert = new Alert(AlertType.INFORMATION);
                alert.setTitle("Error Adding Part");
                alert.setHeaderText("Error");
                alert.setContentText(exceptionMessage);
                alert.showAndWait();
                exceptionMessage = "";
            } else {

                //  Set captured values to TableView
                if (isPartOutsourced == false){ //Maybe check isInstanceOutsourcedPart instead
                
                    OutsourcedPart addedOutsourcedPart = new OutsourcedPart();
                    addedOutsourcedPart.setPartCompanyName(partMachineIDStringOrCompanyName);
                    addedOutsourcedPart.setPartID(partIDInt);//Not captured
                    addedOutsourcedPart.setPartName(partNameString);
                    addedOutsourcedPart.setPartInStock(Integer.parseInt(partInvString));
                    addedOutsourcedPart.setPartMax(Integer.parseInt(partMaxString));
                    addedOutsourcedPart.setPartMin(Integer.parseInt(partMinString));
                    addedOutsourcedPart.setPartPrice(Double.parseDouble(partPriceString));
                    Inventory.addPart(addedOutsourcedPart);

                } else //Add InHousePart
                {
                    InHousePart addedInHousePart = new InHousePart(); //Add inHousePart

                    addedInHousePart.setPartID(partIDInt);//no String to capture it keep as Int generated by system
                    addedInHousePart.setPartName(partNameString);
                    addedInHousePart.setPartPrice(Double.parseDouble(partPriceString));
                    addedInHousePart.setPartInStock(Integer.parseInt(partInvString));
                    addedInHousePart.setPartMin(Integer.parseInt(partMinString));
                    addedInHousePart.setPartMax(Integer.parseInt(partMaxString));
                    addedInHousePart.setPartMachineID(Integer.parseInt(partMachineIDStringOrCompanyName));
                    Inventory.addPart(addedInHousePart);

                }

                Parent savingNewPart = FXMLLoader.load(getClass().getResource("FJerezMainScreen.fxml"));
                Scene scene = new Scene(savingNewPart);
                Stage window = (Stage) ((Node) event.getSource()).getScene().getWindow();
                window.setScene(scene);
                window.show();

            }
        } catch (NumberFormatException e) {  //this code broke addpart
            Alert alert = new Alert(AlertType.INFORMATION);
            alert.setTitle("Error Adding Part");
            alert.setHeaderText("Error");
            alert.setContentText("Invalid Entry, Check All Required Fields");
            alert.showAndWait();
        }
    }

    @FXML
    void AddPartsCancelledAction(ActionEvent e) throws IOException {
        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
        alert.initModality(Modality.NONE);
        alert.setTitle("Are you sure you want to cancel adding a Part?");
        alert.setHeaderText("Confirm");
        alert.setContentText("Are you sure you want to cancel?");
        Optional<ButtonType> result = alert.showAndWait();

        if (result.get() == ButtonType.OK) {
            Parent addProductCancel = FXMLLoader.load(getClass().getResource("FJerezMainScreen.fxml"));
            Scene scene = new Scene(addProductCancel);
            Stage window = (Stage) ((Node) e.getSource()).getScene().getWindow();
            window.setScene(scene);
            window.show();
        } else {
            System.out.println("You Cancelled Adding a Part");
        }

    }

}
